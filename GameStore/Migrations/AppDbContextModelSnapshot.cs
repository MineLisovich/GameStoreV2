// <auto-generated />
using System;
using GameStore.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameStore.Domain.Entities.AllGames", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Developersid")
                        .HasColumnType("int");

                    b.Property<int>("GameWeight")
                        .HasColumnType("int");

                    b.Property<int>("Ganresid")
                        .HasColumnType("int");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Platformsid")
                        .HasColumnType("int");

                    b.Property<string>("Poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<string>("VRAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateAddedSite")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkTrailerGame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameGame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("screenshotGame_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screenshotGame_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screenshotGame_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screenshotGame_4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Developersid");

                    b.HasIndex("Ganresid");

                    b.HasIndex("Platformsid");

                    b.ToTable("AllGames");

                    b.HasData(
                        new
                        {
                            id = 401,
                            CPU = "Intel Core i5-11400F or AMD Ryzen 5 5600X",
                            Developersid = 214,
                            GameWeight = 80,
                            Ganresid = 103,
                            OS = "Windows 10 64 bit",
                            Platformsid = 301,
                            Poster = "2077.png",
                            RAM = 8,
                            VRAM = "Nvidia GeForce GTX 1660 GP 6GB GDDR6",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Cyberpunk 2077 — приключенческая ролевая игра, действие которой происходит в мегаполисе Найт-Сити, где власть, роскошь и модификации тела ценятся выше всего. Вы играете за V, наёмника в поисках устройства, позволяющего обрести бессмертие. Вы сможете менять киберимпланты, навыки и стиль игры своего персонажа, исследуя открытый мир, где ваши поступки влияют на ход сюжета и всё, что вас окружает.",
                            features = "Для одного игрока",
                            linkTrailerGame = "aSrFWinrkeQ",
                            nameGame = "Cyberpunk 2077",
                            price = 34,
                            releaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Cyberpunk_screenshotGame_1.png",
                            screenshotGame_2 = "Cyberpunk_screenshotGame_2.png",
                            screenshotGame_3 = "Cyberpunk_screenshotGame_3.png",
                            screenshotGame_4 = "Cyberpunk_screenshotGame_4.png"
                        },
                        new
                        {
                            id = 402,
                            CPU = "Intel® Core™ 2 Q6600 / AMD Phenom 9850",
                            Developersid = 205,
                            GameWeight = 110,
                            Ganresid = 101,
                            OS = "Windows 7 64 bit / Windows 10 64 bit",
                            Platformsid = 304,
                            Poster = "GTA5.png",
                            RAM = 4,
                            VRAM = "NVIDIA® 9800 GT / AMD HD 4870",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Действие игры происходит в вымышленном штате Сан-Андреас, прообразом которого послужила Южная Калифорния. Сюжет в однопользовательском режиме строится вокруг приключений троих грабителей, устраивающих всё более дерзкие ограбления и противостоящих как организованной преступности, так и правоохранительным ведомствам. В процессе игры игрок управляет выбранным персонажем в режиме от первого или от третьего лица; персонаж может свободно передвигаться по обширному миру игры как пешком, так и на автомобилях и других видах транспорта. Особенностью Grand Theft Auto V по сравнению с другими играми серии является возможность переключаться между персонажами в любой момент, как во время выполнения заданий, так и вне их. Многие задания игры связаны с ограблениями и угоном автомобилей; при этом игровой персонаж может участвовать в перестрелках и погонях. Grand Theft Auto Online представляет собой встроенный многопользовательский онлайн-режим, поддерживающий до 30 игроков одновременно — для них предлагаются как кооперативные, так и соревновательные задания.",
                            features = "Для нескольких игроков / Для одного игрока",
                            linkTrailerGame = "QkkoHAzjnUs",
                            nameGame = "Grand Theft Auto V",
                            price = 67,
                            releaseDate = new DateTime(2013, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "GTAV_screenshotGame_1.png",
                            screenshotGame_2 = "GTAV_screenshotGame_2.png",
                            screenshotGame_3 = "GTAV_screenshotGame_3.png",
                            screenshotGame_4 = "GTAV_screenshotGame_4.png"
                        },
                        new
                        {
                            id = 403,
                            CPU = "2.6 GHz Quad Core or similar",
                            Developersid = 215,
                            GameWeight = 2,
                            Ganresid = 103,
                            OS = "Windows 7 64 bit",
                            Platformsid = 301,
                            Poster = "Valheim.png",
                            RAM = 8,
                            VRAM = "GeForce GTX 950 or Radeon HD 7970",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Вальхейм — это игра, в которой вам предстоит исследовать огромный фэнтезийный мир, пропитанный скандинавской мифологией и культурой викингов. Ваше приключение начнется в самом сердце Вальхейма, месте довольно спокойном. Но берегитесь, ведь чем дальше вы будете продвигаться, тем опаснее будет становиться мир вокруг. К счастью, по пути вас будут ждать не только опасности — вы также будете чаще находить ценные материалы, которые весьма пригодятся для создания смертоносного оружия и крепкой брони. Возводите крепости и заставы по всему миру! А со временем постройте несокрушимый драккар и отправьтесь покорять бескрайние океаны в поиске чужестранных земель... Но постарайтесь не заплыть слишком далеко...",
                            features = "Для нескольких игроков",
                            linkTrailerGame = "5mHRJ1KFe20",
                            nameGame = "Valheim",
                            price = 25,
                            releaseDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Valheim_screenshotGame_1.png",
                            screenshotGame_2 = "Valheim_screenshotGame_2.png",
                            screenshotGame_3 = "Valheim_screenshotGame_3.png",
                            screenshotGame_4 = "Valheim_screenshotGame_4.png"
                        },
                        new
                        {
                            id = 404,
                            CPU = "Dual core (Intel Pentium D или лучше)",
                            Developersid = 206,
                            GameWeight = 16,
                            Ganresid = 101,
                            OS = "Windows XP/Vista / Windows 7",
                            Platformsid = 306,
                            Poster = "Assassin1.png",
                            RAM = 2,
                            VRAM = "256MB с поддержкой Shader Model 3.0 или выше",
                            dateAddedSite = new DateTime(2022, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Действие игры разворачивается во времена Третьего крестового похода, а именно в 1191 году. В настоящем времени бармена Дезмонда Майлса, главного героя, похищает корпорация «Абстерго», которая с помощью Анимуса, машины для извлечения генетической памяти, хочет найти артефакт Первой Цивилизации. В курс дела Дезмонда вводят учёный Уоррен Видик и его ассистентка Люси Стиллман. Они рассказывают ему, что он является потомком ассасина Альтаира ибн-Ла-Ахада, который обнаружил артефакт, и через него хотят узнать местонахождение артефакта.",
                            features = "Для одного игрока",
                            linkTrailerGame = "RjQ6ZtyXoA0",
                            nameGame = "Assassin’s Creed",
                            price = 13,
                            releaseDate = new DateTime(2007, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Assassin1_screenshotGame_1.png",
                            screenshotGame_2 = "Assassin1_screenshotGame_2.png",
                            screenshotGame_3 = "Assassin1_screenshotGame_3.png",
                            screenshotGame_4 = "Assassin1_screenshotGame_4.png"
                        },
                        new
                        {
                            id = 405,
                            CPU = "Intel Core i5-6600K",
                            Developersid = 201,
                            GameWeight = 60,
                            Ganresid = 103,
                            OS = "Windows 7/8/8.1/10",
                            Platformsid = 301,
                            Poster = "Fallout76.png",
                            RAM = 8,
                            VRAM = "NVIDIA GeForce GTX 780",
                            dateAddedSite = new DateTime(2022, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "События игры происходят в 2102 году в Западной Виргинии. Игрок — житель Убежища 76 (Резидент), проспавший выход на поверхность. Находя голозаписи Смотрительницы Убежища, которая покинула его раньше всех, игрок понимает, что над регионом нависла опасность в виде горелых — людей, заражённых инфекцией, превращающихся со временем в неподвижные статуи, которые, распадаясь, разносят заразу, заражая как и других существ, так и людей. Как выясняется, источник той болезни — зверожоги. Это мутировавшие драконоподобные летучие мыши, обитавшие под землёй. По мере продвижения по сюжету и выполнению квестов игрок создаёт вакцину против чумы зверожогов. Далее Резиденту предстоит проникнуть в хорошо спрятанный бункер «Анклава» — бывшего правительства США. Там ему встречается МОДУС — суперкомпьютер, который убил всех членов Анклава в качестве мести за попытку уничтожить его. МОДУС рассказывает о ядерных ракетах и как их запустить. Игрок завладевает кодами запуска и, проведя бомбардировку главного разлома, откуда вылезают зверожоги, сталкивается с ещё более страшной угрозой — маткой зверожогов. В тяжёлом бою её удаётся убить, и зверожоги, оставшись без главы, разлетаются подобно муравьям, оставшимся без королевы.",
                            features = "Для нескольких игроков",
                            linkTrailerGame = "EtiVOmFiWA0",
                            nameGame = "Fallout 76",
                            price = 70,
                            releaseDate = new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Fallout76Screenshot_1.png",
                            screenshotGame_2 = "Fallout76Screenshot_2.png",
                            screenshotGame_3 = "Fallout76Screenshot_3.png",
                            screenshotGame_4 = "Fallout76Screenshot_4.png"
                        },
                        new
                        {
                            id = 406,
                            CPU = "AMD Ryzen™ 5 2600 (Intel i7-4770)",
                            Developersid = 210,
                            GameWeight = 75,
                            Ganresid = 103,
                            OS = "Windows 7/10 (с последней версией пакета обновлений)",
                            Platformsid = 305,
                            Poster = "Borderlands3.png",
                            RAM = 16,
                            VRAM = "AMD Radeon™ RX 590 (NVIDIA GeForce GTX 1060 6 ГБ)",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Всеми любимый «шутер с базиллионами лута» возвращается, чтобы порадовать вас несметным множеством убойных стволов и новым крышесносным приключением! Вам предстоит покорить доселе не виданные миры, играя за одного из четырёх новых искателей Хранилища – нереально крутых перцев, у каждого из которых уникальные навыки, способности и модификации. Действуя в одиночку или в компании друзей, вы должны будете дать бой яростным противникам, нагрести побольше трофеев и спасти свой дом от безжалостных психопатов, возглавляющих самую опасную секту в галактике.",
                            features = "Для одного игрока / Для нескольких игроков",
                            linkTrailerGame = "tQj8CLKoTCs",
                            nameGame = "Borderlands 3",
                            price = 70,
                            releaseDate = new DateTime(2019, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "borderlands3_screenshot_1.png",
                            screenshotGame_2 = "borderlands3_screenshot_2.png",
                            screenshotGame_3 = "borderlands3_screenshot_3.png",
                            screenshotGame_4 = "borderlands3_screenshot_4.png"
                        },
                        new
                        {
                            id = 407,
                            CPU = "Intel Core i7 3770 с частотой 3,4 ГГц / AMD FX-8350 с частотой 4 ГГц",
                            Developersid = 214,
                            GameWeight = 77,
                            Ganresid = 103,
                            OS = "64-разрядная Windows 7, 64-разрядная Windows 8 (8.1) или 64-разрядная Windows 10",
                            Platformsid = 301,
                            Poster = "Witcher3.png",
                            RAM = 8,
                            VRAM = "NVIDIA GPU GeForce GTX 770 / AMD GPU Radeon R9 290",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Станьте профессиональным убийцей монстров и отправляйтесь в приключение эпических масштабов! После своего выхода игра «Ведьмак 3: Дикая Охота» (The Witcher 3: Wild Hunt) стала настоящей классикой, получив более 250 наград в номинации «Игра года». Вас ждёт более 100 часов грандиозного приключения по открытому миру, а также сюжетные расширения, которые растянутся ещё на 50 часов игры. Это издание включает в себя весь дополнительный контент: новое оружие, броню, экипировку для компаньонов, новый режим игры и побочные квесты.",
                            features = "Для одного игрока",
                            linkTrailerGame = "4ndIeNusRLI",
                            nameGame = "Ведьмак 3: Дикая Охота",
                            price = 50,
                            releaseDate = new DateTime(2014, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "witcher3__screenshot_1.png",
                            screenshotGame_2 = "witcher3__screenshot_2.png",
                            screenshotGame_3 = "witcher3__screenshot_3.png",
                            screenshotGame_4 = "witcher3__screenshot_4.png"
                        },
                        new
                        {
                            id = 408,
                            CPU = "Intel® Core™ i7-4770K / AMD Ryzen 5 1500x",
                            Developersid = 205,
                            GameWeight = 150,
                            Ganresid = 101,
                            OS = "Windows 10 - April 2018 Update (v1803)",
                            Platformsid = 304,
                            Poster = "rdr2.png",
                            RAM = 12,
                            VRAM = "Nvidia GeForce GTX 1060 6 ГБ / AMD Radeon RX 480 4 ГБ",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Америка, 1899 год. Артур Морган и другие подручные Датча ван дер Линде вынуждены пуститься в бега. Их банде предстоит участвовать в кражах, грабежах и перестрелках в самом сердце Америки. За ними по пятам идут федеральные агенты и лучшие в стране охотники за головами, а саму банду разрывают внутренние противоречия. Артуру предстоит выбрать, что для него важнее: его собственные идеалы или же верность людям, которые его взрастили.",
                            features = "Для одного игрока / Для нескольких игроков",
                            linkTrailerGame = "0kqEBOZaP94",
                            nameGame = "Red Dead Redemption 2",
                            price = 80,
                            releaseDate = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "RDR2_screenshot_1.png",
                            screenshotGame_2 = "RDR2_screenshot_2.png",
                            screenshotGame_3 = "RDR2_screenshot_3.png",
                            screenshotGame_4 = "RDR2_screenshot_4.png"
                        },
                        new
                        {
                            id = 409,
                            CPU = "AMD Ryzen 5 1500X | Intel Core I7-4790",
                            Developersid = 206,
                            GameWeight = 4,
                            Ganresid = 101,
                            OS = "Windows 7/8/10",
                            Platformsid = 306,
                            Poster = "Division2.png",
                            RAM = 8,
                            VRAM = "AMD RX 480 NVIDIA GeForce GTX 970",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Вашингтон на грани катастрофы. Нашему обществу угрожает беззаконие и нестабильность, и слухи о перевороте в Капитолии только способствуют хаосу. Мы крайне нуждаемся в каждом действующем агенте группы Division — только с ними мы сможем спасти город, пока не поздно.",
                            features = "Для нескольких игроков",
                            linkTrailerGame = "ssyC-QwcPug",
                            nameGame = "Tom Clancy's The Division®2",
                            price = 40,
                            releaseDate = new DateTime(2019, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "thedivision2_screenshot_1.png",
                            screenshotGame_2 = "thedivision2_screenshot_2.png",
                            screenshotGame_3 = "thedivision2_screenshot_3.png",
                            screenshotGame_4 = "thedivision2_screenshot_4.png"
                        },
                        new
                        {
                            id = 410,
                            CPU = "Intel Core i5-2300 2,8 ГГц/AMD Phenom II X4 945 3 ГГц",
                            Developersid = 201,
                            GameWeight = 60,
                            Ganresid = 103,
                            OS = "Windows 7/8/10/11 (необходима 64-битная ОС)",
                            Platformsid = 301,
                            Poster = "Fallout4.png",
                            RAM = 8,
                            VRAM = "NVIDIA GTX 550 Ti 2 Гб/AMD Radeon HD 7870 2 Гб",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Добро пожаловать в игру нового поколения с открытым миром! Вы — единственный выживший из убежища 111, оказавшийся в мире, разрушенном ядерной войной. Каждый миг вы сражаетесь за выживание, каждое решение может стать последним. Но именно от вас зависит судьба пустошей. Добро пожаловать домой.",
                            features = "Для одного игрока",
                            linkTrailerGame = "ErgtR14-MV8",
                            nameGame = "Fallout 4",
                            price = 50,
                            releaseDate = new DateTime(2015, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "fallout4_1.png",
                            screenshotGame_2 = "fallout4_2.png",
                            screenshotGame_3 = "fallout4_3.png",
                            screenshotGame_4 = "fallout4_4.png"
                        },
                        new
                        {
                            id = 411,
                            CPU = "Intel i5-2400 или AMD FX-8320",
                            Developersid = 201,
                            GameWeight = 15,
                            Ganresid = 102,
                            OS = "Windows 7/8.1/10 (64-разрядные версии)",
                            Platformsid = 301,
                            Poster = "The_Elder_Scrolls_V_Skyrim.png",
                            RAM = 0,
                            VRAM = "NVIDIA GTX 780 (3 ГБ) AMD R9 290 (4 ГБ)",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Эта часть, как и предыдущие три игры серии — The Elder Scrolls II: Daggerfall, The Elder Scrolls III: Morrowind и The Elder Scrolls IV: Oblivion — получила титул «Игра года» на Video Game Award 2011. Действие происходит через 200 лет после событий Oblivion. Игра была анонсирована 11 ноября 2010 года, а выпущена 11 ноября 2011 года. В игре задействован новый движок Creation Engine и обновлённая система мелких квестов Radiant Story.",
                            features = "Для одного игрока",
                            linkTrailerGame = "JSRtYpNRoN0",
                            nameGame = "The Elder Scrolls V: Skyrim",
                            price = 50,
                            releaseDate = new DateTime(2016, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Skyrim_1.png",
                            screenshotGame_2 = "Skyrim_2.png",
                            screenshotGame_3 = "Skyrim_3.png",
                            screenshotGame_4 = "Skyrim_4.png"
                        },
                        new
                        {
                            id = 412,
                            CPU = "AMD Ryzen 5 3600X с частотой 3,8 ГГц / Intel i7-7700 с частотой 3,6 ГГц или выше",
                            Developersid = 206,
                            GameWeight = 60,
                            Ganresid = 101,
                            OS = "Windows 10 (версия 20H1 или новее) — только 64-разрядная версия",
                            Platformsid = 305,
                            Poster = "FarCry6_poster.png",
                            RAM = 16,
                            VRAM = "AMD RX VEGA 64 (8 ГБ) / NVIDIA GTX 1080 (8 ГБ) или выше",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Добро пожаловать в Яру – тропический рай, где время словно остановилось. Диктатор Антон Кастильо намерен любой ценой вернуть былое величие нации. За ним следует его сын – Диего. Но в угнетенной стране вспыхнуло пламя революции.",
                            features = "Для одного игрока / Для нескольких игроков",
                            linkTrailerGame = "YqDpa6gHAZg",
                            nameGame = "Far Cry® 6",
                            price = 80,
                            releaseDate = new DateTime(2021, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "FarCry6_1.png",
                            screenshotGame_2 = "FarCry6_2.png",
                            screenshotGame_3 = "FarCry6_3.png",
                            screenshotGame_4 = "FarCry6_4.png"
                        },
                        new
                        {
                            id = 413,
                            CPU = "Intel Core i7-4770 с частотой 3,4 ГГц | AMD Ryzen 5 1600 с частотой 3,2 ГГц или эквивалентный",
                            Developersid = 206,
                            GameWeight = 40,
                            Ganresid = 101,
                            OS = "Windows 7 SP1 | Windows 8.1 | Windows 10 | Только 64-разрядные версии",
                            Platformsid = 305,
                            Poster = "Far_Cry_5.png",
                            RAM = 8,
                            VRAM = "NVIDIA GeForce GTX 970 | AMD R9 290X",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Добро пожаловать в округ Хоуп, штат Монтана, земли свободолюбцев и храбрецов, где всем заправляет секта конца света «Врата Эдема».Освободите округ Хоуп в одиночку или вместе с другим игроком. Пользуйтесь услугами наёмников и приручайте животных, чтобы уничтожить секту.",
                            features = "Для одного игрока / Для нескольких игроков",
                            linkTrailerGame = "ZCBC2kN33jw",
                            nameGame = "Far Cry® 5",
                            price = 65,
                            releaseDate = new DateTime(2018, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "FarCry5_1.png",
                            screenshotGame_2 = "FarCry5_2.png",
                            screenshotGame_3 = "FarCry5_3.png",
                            screenshotGame_4 = "FarCry5_4.png"
                        },
                        new
                        {
                            id = 414,
                            CPU = "Intel Core i5-2400s с частотой 2,5 ГГц | AMD FX-6350 с частотой 3,9 ГГц или эквивалент",
                            Developersid = 206,
                            GameWeight = 42,
                            Ganresid = 103,
                            OS = "Windows 7 SP1 | Windows 8.1, Windows 10 | только 64-разрядная версия",
                            Platformsid = 306,
                            Poster = "Assassin_Origins.png",
                            RAM = 8,
                            VRAM = "NVIDIA GeForce GTX 760 или AMD R9 270/2048 МБ видеопамяти с шейдерной моделью 5.0 или выше",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Раскройте темные тайны и забытые мифы, возвращаясь к моменту основания: Истоки Братства ассасинов. Испытайте совершенно новый способ ведения боя. Добывайте и используйте десятки видов оружия с различными характеристиками и редкостями.Плывите вниз по Нилу, раскройте тайны пирамид или сражайтесь с опасными древними группировками и дикими зверями, исследуя эту гигантскую и непредсказуемую страну.",
                            features = "Для одного игрока",
                            linkTrailerGame = "x_1GwlWSil4",
                            nameGame = "Assassin's Creed Origins",
                            price = 65,
                            releaseDate = new DateTime(2017, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Assassin_Origins_1.png",
                            screenshotGame_2 = "Assassin_Origins_2.png",
                            screenshotGame_3 = "Assassin_Origins_3.png",
                            screenshotGame_4 = "Assassin_Origins_4.png"
                        },
                        new
                        {
                            id = 415,
                            CPU = "Не ниже AMD FX-8350 с частотой 4 ГГц | Ryzen 5 — 1400 | Intel Core i7-3770 с частотой 3,5 ГГц",
                            Developersid = 206,
                            GameWeight = 46,
                            Ganresid = 103,
                            OS = "Windows 7 с пакетом обновления 1 (SP1), Windows 8.1, Windows 10 | Только 64-разрядные версии",
                            Platformsid = 306,
                            Poster = "Assassins_Creed_Odyssey.png",
                            RAM = 8,
                            VRAM = "AMD Radeon R9 285 | NVIDIA GeForce GTX 660 | 2 ГБ видеопамяти и Shader Model 5.0",
                            dateAddedSite = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            descriptionG = "Определите свою судьбу в игре Assassin's Creed® Одиссея. Пройдите путь от изгоя до живой легенды: отправьтесь в далёкое странствие, чтобы раскрыть тайны своего прошлого и изменить будущее Древней Греции. Путешествуйте по густым зелёным лесам, вулканическим островам и шумным городам — встаньте на путь открытий и встреч в мире, что погряз в войне, начатой богами и людьми.",
                            features = "Для одного игрока",
                            linkTrailerGame = "AQaSqKjbX60",
                            nameGame = "Assassin's Creed Odyssey",
                            price = 65,
                            releaseDate = new DateTime(2018, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            screenshotGame_1 = "Assassins_Creed_Odyssey_1.png",
                            screenshotGame_2 = "Assassins_Creed_Odyssey_2.png",
                            screenshotGame_3 = "Assassins_Creed_Odyssey_3.png",
                            screenshotGame_4 = "Assassins_Creed_Odyssey_4.png"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Basket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllGamesid")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("finalPrice")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AllGamesid");

                    b.HasIndex("UserId");

                    b.ToTable("Basket");

                    b.HasData(
                        new
                        {
                            id = 801,
                            AllGamesid = 401,
                            UserId = "702",
                            finalPrice = 3
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Chek", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameKeyid")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateAddedCheque")
                        .HasColumnType("datetime2");

                    b.Property<string>("nameGame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceGame")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("GameKeyid");

                    b.HasIndex("UserId");

                    b.ToTable("Chek");

                    b.HasData(
                        new
                        {
                            id = 1001,
                            GameKeyid = 901,
                            UserId = "702",
                            dateAddedCheque = new DateTime(2022, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            nameGame = "Cyberpunk 2077",
                            priceGame = 24
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Developers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameDeveloper")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            id = 201,
                            nameDeveloper = "Bethesda"
                        },
                        new
                        {
                            id = 202,
                            nameDeveloper = "Blizzard"
                        },
                        new
                        {
                            id = 203,
                            nameDeveloper = "Valve"
                        },
                        new
                        {
                            id = 204,
                            nameDeveloper = "Electronic Arts"
                        },
                        new
                        {
                            id = 205,
                            nameDeveloper = "RockStar Games"
                        },
                        new
                        {
                            id = 206,
                            nameDeveloper = "Ubisoft"
                        },
                        new
                        {
                            id = 207,
                            nameDeveloper = "Square Enix"
                        },
                        new
                        {
                            id = 208,
                            nameDeveloper = "Activision"
                        },
                        new
                        {
                            id = 209,
                            nameDeveloper = "Konami"
                        },
                        new
                        {
                            id = 210,
                            nameDeveloper = "2K Games"
                        },
                        new
                        {
                            id = 211,
                            nameDeveloper = "Matrix Games"
                        },
                        new
                        {
                            id = 212,
                            nameDeveloper = "Nacon"
                        },
                        new
                        {
                            id = 213,
                            nameDeveloper = "Majesco"
                        },
                        new
                        {
                            id = 214,
                            nameDeveloper = "CD Projekt Red"
                        },
                        new
                        {
                            id = 215,
                            nameDeveloper = "Iron Gate AB"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GameKey", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllGamesid")
                        .HasColumnType("int");

                    b.Property<string>("Key_game")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("AllGamesid");

                    b.ToTable("GameKey");

                    b.HasData(
                        new
                        {
                            id = 901,
                            AllGamesid = 401,
                            Key_game = "GHZNAZXB-ZXNHDANX-IOEJZNDG-MSHSJWUJ"
                        },
                        new
                        {
                            id = 902,
                            AllGamesid = 402,
                            Key_game = "IEUWYHDB-DKSNZMEU-XHSKDMWO-XMBADHNR"
                        },
                        new
                        {
                            id = 903,
                            AllGamesid = 403,
                            Key_game = "ZXNEYTAB-KFBSYDBF-XHSNWDAC-DNWHDDEWE"
                        },
                        new
                        {
                            id = 904,
                            AllGamesid = 404,
                            Key_game = "FJNVCDKM-KLWDEIRU-SXJNHWEG-SAJKFHJD"
                        },
                        new
                        {
                            id = 905,
                            AllGamesid = 405,
                            Key_game = "GRHUSDNM-CXJNWGVD-DJNCLKWD-WEYUXZBN"
                        },
                        new
                        {
                            id = 906,
                            AllGamesid = 406,
                            Key_game = "RTIOSDBN-REHJNMSAX-REUYBSXN-DSHJVBWE"
                        },
                        new
                        {
                            id = 907,
                            AllGamesid = 407,
                            Key_game = "REYUCBXN-YUEWVSBA-SAHJWVBQ-OXZIQVWB"
                        },
                        new
                        {
                            id = 908,
                            AllGamesid = 408,
                            Key_game = "VFBNYTWE-DSHJWQVB-DISUQWVB-KSJAEWBV"
                        },
                        new
                        {
                            id = 909,
                            AllGamesid = 409,
                            Key_game = "CXBNWJHE-KFJHDHJWFEK-HWEJRF-WHKFEUJ"
                        },
                        new
                        {
                            id = 910,
                            AllGamesid = 410,
                            Key_game = "WFOQEUIFHW-KWEFHJ-BEWFJH-WEFVHGJ"
                        },
                        new
                        {
                            id = 911,
                            AllGamesid = 411,
                            Key_game = "FWGYURQ-FEBVWQUY-QJHFG-QYUWEBN"
                        },
                        new
                        {
                            id = 912,
                            AllGamesid = 412,
                            Key_game = "GYWUI-WBKFEJ-REYUWI-BHSAJ-URYIWQE"
                        },
                        new
                        {
                            id = 913,
                            AllGamesid = 413,
                            Key_game = "WIUETYR-AKFHGEW-HBJWRE-WRKQEJH"
                        },
                        new
                        {
                            id = 914,
                            AllGamesid = 414,
                            Key_game = "WHEFJK-EWRBKJH-UIWYRQE-CBXZJHSD-EFWUIY"
                        },
                        new
                        {
                            id = 915,
                            AllGamesid = 415,
                            Key_game = "RVUIEHG-0EFWIUY-WEHKFUJ-JKDSIJFSDO"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Ganres", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameGanres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ganres");

                    b.HasData(
                        new
                        {
                            id = 101,
                            nameGanres = "Экшн"
                        },
                        new
                        {
                            id = 102,
                            nameGanres = "Приключения"
                        },
                        new
                        {
                            id = 103,
                            nameGanres = "RPG"
                        },
                        new
                        {
                            id = 104,
                            nameGanres = "Симуляторы"
                        },
                        new
                        {
                            id = 105,
                            nameGanres = "Спорт"
                        },
                        new
                        {
                            id = 106,
                            nameGanres = "Гонки"
                        },
                        new
                        {
                            id = 107,
                            nameGanres = "Казуал"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Platforms", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("namePlatform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            id = 301,
                            namePlatform = "Steam"
                        },
                        new
                        {
                            id = 302,
                            namePlatform = "Origin"
                        },
                        new
                        {
                            id = 303,
                            namePlatform = "Battle.net"
                        },
                        new
                        {
                            id = 304,
                            namePlatform = "RockStar Launcher"
                        },
                        new
                        {
                            id = 305,
                            namePlatform = "Epic Games Launcher"
                        },
                        new
                        {
                            id = 306,
                            namePlatform = "Ubisoft Connect"
                        });
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Shares", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllGamesid")
                        .HasColumnType("int");

                    b.Property<int>("discountPrice")
                        .HasColumnType("int");

                    b.Property<string>("nameImageSlider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("AllGamesid");

                    b.ToTable("Shares");

                    b.HasData(
                        new
                        {
                            id = 501,
                            AllGamesid = 401,
                            discountPrice = 30,
                            nameImageSlider = "2077.png"
                        },
                        new
                        {
                            id = 502,
                            AllGamesid = 405,
                            discountPrice = 55,
                            nameImageSlider = "Fallout76.png"
                        },
                        new
                        {
                            id = 503,
                            AllGamesid = 408,
                            discountPrice = 70,
                            nameImageSlider = "rdr2.png"
                        },
                        new
                        {
                            id = 504,
                            AllGamesid = 407,
                            discountPrice = 30,
                            nameImageSlider = "Wicher3.png"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "601",
                            ConcurrencyStamp = "d88b7adb-8633-405f-b8be-70da2d49f9ad",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "602",
                            ConcurrencyStamp = "2e3c8de4-dacb-4535-a27d-865174745ffb",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "701",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "63a054b6-2a84-4c56-baac-c0404e02b168",
                            Email = "deeLimpay@mail.ru",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "deeLimpay@mail.ru",
                            NormalizedUserName = "deeLimpay",
                            PasswordHash = "AQAAAAEAACcQAAAAEBUiYSAwO2OjPVXCs0XBr5VOsGp8mlClmcgotoPUflgX+K23usU4mDRf2AUjen+SzA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "deeLimpay"
                        },
                        new
                        {
                            Id = "702",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "434d3da7-a471-4462-b0c1-73b43beb119c",
                            Email = "stepa@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "stepa@gmail.com",
                            NormalizedUserName = "Stepashka",
                            PasswordHash = "AQAAAAEAACcQAAAAEBvnhjqAdxxhjFqT49bdwzZJ6AXoVeddlXSRgPUgn5p2fpTeNHavIJuCqU2E3oyZwg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "Stepashka"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "701",
                            RoleId = "601"
                        },
                        new
                        {
                            UserId = "702",
                            RoleId = "602"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.AllGames", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.Developers", "Developers")
                        .WithMany("AllGames")
                        .HasForeignKey("Developersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Domain.Entities.Ganres", "Ganres")
                        .WithMany("GanresAllGames")
                        .HasForeignKey("Ganresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Domain.Entities.Platforms", "Platforms")
                        .WithMany("AllGames")
                        .HasForeignKey("Platformsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Basket", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.AllGames", "AllGames")
                        .WithMany("Baskets")
                        .HasForeignKey("AllGamesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Chek", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.GameKey", "GameKey")
                        .WithMany("Chek")
                        .HasForeignKey("GameKeyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStore.Domain.Entities.GameKey", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.AllGames", "AllGames")
                        .WithMany("GameKeys")
                        .HasForeignKey("AllGamesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStore.Domain.Entities.Shares", b =>
                {
                    b.HasOne("GameStore.Domain.Entities.AllGames", "AllGames")
                        .WithMany("Shares")
                        .HasForeignKey("AllGamesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
